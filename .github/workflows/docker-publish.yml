name: Docker Publish

on:
  workflow_dispatch:

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  SOURCE_REPO: https://github.com/bitcoin/bitcoin
  USE_DOCKERHUB: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKERHUB_ORGANIZATION: ${{ secrets.DOCKERHUB_ORGANIZATION || github.actor }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Determine latest release version
        run: |
          echo "SOURCE_VERSION=$(basename $(curl -Ls -o /dev/null -w %{url_effective} ${SOURCE_REPO}/releases/latest))" | tee -a $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.0'

      # Set up Docker BuildX
      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v2
        with:
          platforms: ${{ matrix.platforms }}

      # Login against a Docker registry except on PR, push to ghcr.io by default
      # If DOCKERHUB_USERNAME and DOCKERHUB_TOKEN secrets are set, push to Docker Hub also
      # https://github.com/docker/login-action
      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log into Docker Hub registry
        if: github.event_name != 'pull_request' && env.USE_DOCKERHUB == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
            ${{ env.USE_DOCKERHUB == 'true' && env.IMAGE_NAME || '' }}
          flavor: latest=auto
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ env.SOURCE_VERSION }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/s390x, linux/ppc64le, linux/arm64, linux/arm/v7, linux/arm/v6, linux/amd64, linux/s390x
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DOCKER_GIT_SHA=${{ github.sha }}
            SOURCE_VERSION=${{ env.SOURCE_VERSION }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        run: cosign sign -y ghcr.io/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
      - name: Sign the published Docker image
        if: github.event_name != 'pull_request' && env.USE_DOCKERHUB == 'true'
        run: cosign sign -y ${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
